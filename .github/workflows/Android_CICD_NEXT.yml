name: Android_CICD_NEXT
on:
  push:
    branches:
      - next

jobs:
  deploy:
    name: Deploying to Play Store
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          yarn install

      #   - name: Setup JDK
      #     uses: actions/setup-java@v1
      #     with:
      #       java-version: 16

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true
          working-directory: 'android'

      - name: Install Fastlane
        run: |
          bundle install
          bundle update fastlane

      - name: Decode Service Account Key JSON File
        uses: timheuer/base64-to-file@v1.2
        id: service_account_json_file
        with:
          fileName: 'serviceAccount.json'
          encodedString: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}

      #   - name: Generate private-decoded-key.json file
      #     run: echo ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }} | base64 -d > /home/runner/work/${{ secrets.PROJECT_NAME }}/${{ secrets.PROJECT_NAME }}/service_account_key.json

      - name: Decode Keystore File
        uses: timheuer/base64-to-file@v1.2
        id: release_keystore
        with:
          fileName: 'keystore.jks'
          encodedString: ${{ secrets.ANDROID_KEYSTORE_FILE }}

      #   - name: Decode Keystore File
      #     id: release_keystore
      #     run: echo ${{ secrets.ANDROID_KEYSTORE_FILE }} | base64 -d > keystore.jks

      #   - name: Get file path
      #     id: path
      #     run: |
      #       echo "::set-output name=path::$(realpath keystore.jks)"

      #   - name: Use file path
      #     run: |
      #       echo "Decoded file path: ${{ steps.path.outputs.path }}"

      - name: Define version code with offset
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 73
        run: |
          VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))
          echo "version_code=$VERSION_CODE" >> $GITHUB_ENV

      - name: Update version code
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: android/app/build.gradle
          versionCode: ${{ env.version_code }}

      #   - name: Configure Keystore
      #     run: |
      #       echo "$ANDROID_KEYSTORE_FILE" > release.jks.b64
      #       base64 -d -i release.jks.b64 > /home/runner/work/${{ secrets.PROJECT_NAME }}/${{ secrets.PROJECT_NAME }}/android/app/release.jks
      #       echo "storeFile=release.jks" >> release.properties
      #       echo "keyAlias=$ANDROID_KEY_ALIAS" >> release.properties
      #       echo "storePassword=$ANDROID_STORE_PASSWORD" >> release.properties
      #       echo "keyPassword=$ANDROID_KEY_PASSWORD" >> release.properties
      #     env:
      #       ANDROID_KEYSTORE_FILE: ${{ secrets.ANDROID_KEYSTORE_FILE }}
      #       ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      #       ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS}}
      #       ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      #   - name: Create Google Play Config file
      #     run: |
      #       echo "$ANDROID_JSON_KEY_FILE" > play_config.json.b64
      #       base64 -d -i play_config.json.b64 > play_config.json
      #     env:
      #       ANDROID_JSON_KEY_FILE: ${{ secrets.GPLAY_SERVICE_ACCOUNT_KEY_JSON }}

      - name: Build & deploy Android release
        run: cd android && bundle exec fastlane android deploy
        env:
          ANDROID_KEYSTORE_FILE: ${{ steps.release_keystore.outputs.filePath }}
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS}}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_JSON_KEY_FILE: ${{ steps.service_account_json_file.outputs.filePath }}

    #   - run: echo "${{ secrets.PROJECT_NAME }}-Android build has been successfully deployed to Play store ðŸŽ‰"
    #   - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
    #   - name: Notify deploy to Rollbar
    #     uses: rollbar/github-deploy-action@2.1.1
    #     id: rollbar_deploy
    #     with:
    #       environment: 'test'
    #       version: ${{ github.sha }}
    #     env:
    #       ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
    #       ROLLBAR_USERNAME: ${{ github.actor }}
